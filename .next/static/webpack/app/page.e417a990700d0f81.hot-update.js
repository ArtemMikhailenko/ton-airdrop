"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useMassTransfer.ts":
/*!**********************************!*\
  !*** ./hooks/useMassTransfer.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMassTransfer: function() { return /* binding */ useMassTransfer; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ton_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ton/core */ \"(app-pages-browser)/./node_modules/@ton/core/dist/index.js\");\n/* harmony import */ var _ton_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ton_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ton_ton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ton/ton */ \"(app-pages-browser)/./node_modules/@ton/ton/dist/index.js\");\n/* harmony import */ var _ton_ton__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ton_ton__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ton_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ton/crypto */ \"(app-pages-browser)/./node_modules/@ton/crypto/dist/index.js\");\n/* harmony import */ var _wrappers_JettonMinter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/wrappers/JettonMinter */ \"(app-pages-browser)/./wrappers/JettonMinter.ts\");\n/* harmony import */ var _wrappers_JettonWallet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/wrappers/JettonWallet */ \"(app-pages-browser)/./wrappers/JettonWallet.ts\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n\n\n\n\n\n\n\nconst client = new _ton_ton__WEBPACK_IMPORTED_MODULE_2__.TonClient({\n    endpoint: \"https://testnet.toncenter.com/api/v2/jsonRPC\",\n    apiKey: \"your-api-key-here\" // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API –∫–ª—é—á\n});\nfunction useMassTransfer() {\n    const [isSending, setIsSending] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        current: 0,\n        total: 0\n    });\n    const [walletAddress, setWalletAddress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    // üîë –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ—à–µ–ª—å–∫–∞ –∏–∑ –º–Ω–µ–º–æ–Ω–∏–∫–∏\n    const initWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (mnemonic)=>{\n        try {\n            const words = mnemonic.trim().split(\" \");\n            if (words.length !== 24) {\n                throw new Error(\"Mnemonic must contain exactly 24 words\");\n            }\n            const keyPair = await (0,_ton_crypto__WEBPACK_IMPORTED_MODULE_3__.mnemonicToWalletKey)(words);\n            const wallet = _ton_ton__WEBPACK_IMPORTED_MODULE_2__.WalletContractV4.create({\n                workchain: 0,\n                publicKey: keyPair.publicKey\n            });\n            const address = wallet.address.toString();\n            setWalletAddress(address);\n            console.log(\"\\uD83D\\uDD11 Wallet initialized:\", address);\n            return {\n                wallet,\n                keyPair,\n                address\n            };\n        } catch (error) {\n            console.error(\"‚ùå Wallet init error:\", error);\n            throw new Error(\"Invalid mnemonic phrase\");\n        }\n    }, []);\n    // üöÄ –ù–û–í–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –º–∞—Å—Å–æ–≤–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ —á–µ—Ä–µ–∑ –º–Ω–µ–º–æ–Ω–∏–∫—É\n    const sendToAllWithMnemonic = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (recipients, jettonMinterAddress, mnemonic)=>{\n        // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n        if (!recipients || recipients.length === 0) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"Recipients list is empty\");\n            return;\n        }\n        if (!mnemonic || mnemonic.trim().split(\" \").length !== 24) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"Please provide valid 24-word mnemonic\");\n            return;\n        }\n        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥—Ä–µ—Å–∞ –∏ —Å—É–º–º—ã\n        for(let i = 0; i < recipients.length; i++){\n            const r = recipients[i];\n            try {\n                _ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(r.address);\n            } catch (e) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"Invalid address at position \".concat(i + 1, \": \").concat(r.address));\n                return;\n            }\n            const amount = parseFloat(r.amount);\n            if (isNaN(amount) || amount <= 0) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"Invalid amount at position \".concat(i + 1, \": \").concat(r.amount));\n                return;\n            }\n        }\n        setIsSending(true);\n        setProgress({\n            current: 0,\n            total: recipients.length\n        });\n        try {\n            console.log(\"\\uD83D\\uDE80 Starting mass transfer to\", recipients.length, \"recipients\");\n            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ—à–µ–ª–µ–∫\n            const { wallet, keyPair, address } = await initWallet(mnemonic);\n            console.log(\"\\uD83D\\uDCBC Sender wallet:\", address);\n            // –ü–æ–ª—É—á–∞–µ–º jetton wallet –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è  \n            const jettonWalletAddress = await getJettonWalletAddress(address, jettonMinterAddress);\n            console.log(\"\\uD83E\\uDE99 Jetton wallet:\", jettonWalletAddress);\n            const jettonWallet = client.open(_wrappers_JettonWallet__WEBPACK_IMPORTED_MODULE_5__.JettonWallet.createFromAddress(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(jettonWalletAddress)));\n            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é\n            for(let i = 0; i < recipients.length; i++){\n                const recipient = recipients[i];\n                console.log(\"\\uD83D\\uDCE4 Sending \".concat(i + 1, \"/\").concat(recipients.length, \": \").concat(recipient.amount, \" tokens to \").concat(recipient.address));\n                try {\n                    // ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—É–º–º—É –≤ nanocoins (–¥–æ–±–∞–≤–ª—è–µ–º 9 –Ω—É–ª–µ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)\n                    const amountInNano = (0,_ton_core__WEBPACK_IMPORTED_MODULE_1__.toNano)(recipient.amount); // \"1.5\" ‚Üí 1500000000n\n                    // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ jetton —Ç–æ–∫–µ–Ω–æ–≤\n                    const transferMessage = (0,_ton_ton__WEBPACK_IMPORTED_MODULE_2__.internal)({\n                        to: jettonWalletAddress,\n                        value: (0,_ton_core__WEBPACK_IMPORTED_MODULE_1__.toNano)(\"0.08\"),\n                        body: (0,_ton_core__WEBPACK_IMPORTED_MODULE_1__.beginCell)().storeUint(0x0f8a7ea5, 32) // transfer op\n                        .storeUint(0, 64) // query_id\n                        .storeCoins(amountInNano) // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ nanocoins\n                        .storeAddress(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(recipient.address)) // –ø–æ–ª—É—á–∞—Ç–µ–ª—å\n                        .storeAddress(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(address)) // response_destination\n                        .storeUint(0, 1) // custom_payload null\n                        .storeCoins((0,_ton_core__WEBPACK_IMPORTED_MODULE_1__.toNano)(\"0.02\")) // forward_ton_amount\n                        .storeUint(0, 1) // forward_payload null\n                        .endCell()\n                    });\n                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é\n                    const seqno = await wallet.getSeqno(client.provider(wallet.address));\n                    await wallet.sendTransfer(client.provider(wallet.address), {\n                        seqno,\n                        secretKey: keyPair.secretKey,\n                        messages: [\n                            transferMessage\n                        ]\n                    });\n                    setProgress({\n                        current: i + 1,\n                        total: recipients.length\n                    });\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].success(\"‚úÖ Sent \".concat(recipient.amount, \" tokens to \").concat(recipient.address.slice(0, 6), \"...\"));\n                    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏\n                    if (i < recipients.length - 1) {\n                        console.log(\"‚è≥ Waiting 3 seconds before next transaction...\");\n                        await new Promise((resolve)=>setTimeout(resolve, 3000));\n                    }\n                } catch (error) {\n                    console.error(\"‚ùå Failed to send to \".concat(recipient.address, \":\"), error);\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"‚ùå Failed: \".concat(recipient.address.slice(0, 6), \"... (\").concat(error, \")\"));\n                    // –û–ø—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è\n                    const shouldContinue = confirm(\"Failed to send to \".concat(recipient.address.slice(0, 10), \"...\\n\") + \"Error: \".concat(error, \"\\n\\n\") + \"Continue with remaining recipients?\");\n                    if (!shouldContinue) {\n                        break;\n                    }\n                }\n            }\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].success(\"\\uD83C\\uDF89 Mass transfer completed! Sent to \".concat(progress.current, \" recipients\"));\n            console.log(\"‚úÖ Mass transfer completed successfully\");\n        } catch (error) {\n            console.error(\"‚ùå Mass transfer error:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"‚ùå Mass transfer failed: \".concat(error));\n            throw error;\n        } finally{\n            setIsSending(false);\n            setProgress({\n                current: 0,\n                total: 0\n            });\n        }\n    }, [\n        initWallet\n    ]);\n    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è jetton wallet –∞–¥—Ä–µ—Å–∞\n    const getJettonWalletAddress = async (userAddress, jettonMinterAddress)=>{\n        try {\n            const minter = client.open(_wrappers_JettonMinter__WEBPACK_IMPORTED_MODULE_4__.JettonMinter.createFromAddress(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(jettonMinterAddress)));\n            const walletAddress = await minter.getWalletAddressOf(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(userAddress));\n            return walletAddress.toString();\n        } catch (error) {\n            console.error(\"Error getting jetton wallet:\", error);\n            throw new Error(\"Failed to get jetton wallet address\");\n        }\n    };\n    return {\n        sendToAllWithMnemonic,\n        initWallet,\n        isSending,\n        progress,\n        walletAddress\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useMassTransfer.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./wrappers/JettonWallet.ts":
/*!**********************************!*\
  !*** ./wrappers/JettonWallet.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JettonWallet: function() { return /* binding */ JettonWallet; },\n/* harmony export */   jettonWalletConfigToCell: function() { return /* binding */ jettonWalletConfigToCell; }\n/* harmony export */ });\n/* harmony import */ var _ton_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ton/core */ \"(app-pages-browser)/./node_modules/@ton/core/dist/index.js\");\n/* harmony import */ var _ton_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ton_core__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction jettonWalletConfigToCell(config) {\n    return (0,_ton_core__WEBPACK_IMPORTED_MODULE_0__.beginCell)().storeCoins(0).storeAddress(config.owner).storeAddress(config.minter).storeRef(config.walletCode).endCell();\n}\nclass JettonWallet {\n    static createFromAddress(address) {\n        return new JettonWallet(address);\n    }\n    static createFromConfig(config, code) {\n        let workchain = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;\n        const data = jettonWalletConfigToCell(config);\n        const init = {\n            code,\n            data\n        };\n        return new JettonWallet((0,_ton_core__WEBPACK_IMPORTED_MODULE_0__.contractAddress)(workchain, init), init);\n    }\n    async sendDeploy(provider, via, value) {\n        await provider.internal(via, {\n            value,\n            sendMode: _ton_core__WEBPACK_IMPORTED_MODULE_0__.SendMode.PAY_GAS_SEPARATELY,\n            body: (0,_ton_core__WEBPACK_IMPORTED_MODULE_0__.beginCell)().endCell()\n        });\n    }\n    async sendTransfer(provider, via, value, forwardValue, recipient, amount, forwardPayload) {\n        await provider.internal(via, {\n            sendMode: _ton_core__WEBPACK_IMPORTED_MODULE_0__.SendMode.PAY_GAS_SEPARATELY,\n            body: (0,_ton_core__WEBPACK_IMPORTED_MODULE_0__.beginCell)().storeUint(0x0f8a7ea5, 32).storeUint(0, 64).storeCoins(amount).storeAddress(recipient).storeAddress(via.address).storeUint(0, 1).storeCoins(forwardValue).storeUint(1, 1).storeRef(forwardPayload).endCell(),\n            value: value + forwardValue\n        });\n    }\n    async getJettonBalance(provider) {\n        let state = await provider.getState();\n        if (state.state.type !== \"active\") {\n            return 0n;\n        }\n        let res = await provider.get(\"get_wallet_data\", []);\n        return res.stack.readBigNumber();\n    }\n    constructor(address, init){\n        this.address = address;\n        this.init = init;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3dyYXBwZXJzL0pldHRvbldhbGxldC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9IO0FBUTdHLFNBQVNHLHlCQUF5QkMsTUFBMEI7SUFDL0QsT0FBT0osb0RBQVNBLEdBQ1hLLFVBQVUsQ0FBQyxHQUNYQyxZQUFZLENBQUNGLE9BQU9HLEtBQUssRUFDekJELFlBQVksQ0FBQ0YsT0FBT0ksTUFBTSxFQUMxQkMsUUFBUSxDQUFDTCxPQUFPTSxVQUFVLEVBQzFCQyxPQUFPO0FBQ2hCO0FBRU8sTUFBTUM7SUFHVCxPQUFPQyxrQkFBa0JDLE9BQWdCLEVBQUU7UUFDdkMsT0FBTyxJQUFJRixhQUFhRTtJQUM1QjtJQUVBLE9BQU9DLGlCQUFpQlgsTUFBMEIsRUFBRVksSUFBVSxFQUFpQjtZQUFmQyxZQUFBQSxpRUFBWTtRQUN4RSxNQUFNQyxPQUFPZix5QkFBeUJDO1FBQ3RDLE1BQU1lLE9BQU87WUFBRUg7WUFBTUU7UUFBSztRQUMxQixPQUFPLElBQUlOLGFBQWFYLDBEQUFlQSxDQUFDZ0IsV0FBV0UsT0FBT0E7SUFDOUQ7SUFFQSxNQUFNQyxXQUFXQyxRQUEwQixFQUFFQyxHQUFXLEVBQUVDLEtBQWEsRUFBRTtRQUNyRSxNQUFNRixTQUFTRyxRQUFRLENBQUNGLEtBQUs7WUFDekJDO1lBQ0FFLFVBQVV2QiwrQ0FBUUEsQ0FBQ3dCLGtCQUFrQjtZQUNyQ0MsTUFBTTNCLG9EQUFTQSxHQUFHVyxPQUFPO1FBQzdCO0lBQ0o7SUFFQSxNQUFNaUIsYUFDRlAsUUFBMEIsRUFDMUJDLEdBQVcsRUFDWEMsS0FBYSxFQUNiTSxZQUFvQixFQUNwQkMsU0FBa0IsRUFDbEJDLE1BQWMsRUFDZEMsY0FBb0IsRUFDdEI7UUFDRSxNQUFNWCxTQUFTRyxRQUFRLENBQUNGLEtBQUs7WUFDekJHLFVBQVV2QiwrQ0FBUUEsQ0FBQ3dCLGtCQUFrQjtZQUNyQ0MsTUFBTTNCLG9EQUFTQSxHQUNWaUMsU0FBUyxDQUFDLFlBQVksSUFDdEJBLFNBQVMsQ0FBQyxHQUFHLElBQ2I1QixVQUFVLENBQUMwQixRQUNYekIsWUFBWSxDQUFDd0IsV0FDYnhCLFlBQVksQ0FBQ2dCLElBQUlSLE9BQU8sRUFDeEJtQixTQUFTLENBQUMsR0FBRyxHQUNiNUIsVUFBVSxDQUFDd0IsY0FDWEksU0FBUyxDQUFDLEdBQUcsR0FDYnhCLFFBQVEsQ0FBQ3VCLGdCQUNUckIsT0FBTztZQUNaWSxPQUFPQSxRQUFRTTtRQUNuQjtJQUNKO0lBRUEsTUFBTUssaUJBQWlCYixRQUEwQixFQUFFO1FBQy9DLElBQUljLFFBQVEsTUFBTWQsU0FBU2UsUUFBUTtRQUNuQyxJQUFJRCxNQUFNQSxLQUFLLENBQUNFLElBQUksS0FBSyxVQUFVO1lBQy9CLE9BQU8sRUFBRTtRQUNiO1FBQ0EsSUFBSUMsTUFBTSxNQUFNakIsU0FBU2tCLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRTtRQUNsRCxPQUFPRCxJQUFJRSxLQUFLLENBQUNDLGFBQWE7SUFDbEM7SUFyREFDLFlBQVksT0FBeUIsRUFBRSxJQUEwQyxDQUFFO2FBQTlENUIsVUFBQUE7YUFBMkJLLE9BQUFBO0lBQW9DO0FBc0R4RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi93cmFwcGVycy9KZXR0b25XYWxsZXQudHM/M2I3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZGRyZXNzLCBiZWdpbkNlbGwsIENlbGwsIENvbnRyYWN0LCBjb250cmFjdEFkZHJlc3MsIENvbnRyYWN0UHJvdmlkZXIsIFNlbmRlciwgU2VuZE1vZGUgfSBmcm9tICdAdG9uL2NvcmUnO1xuXG5leHBvcnQgdHlwZSBKZXR0b25XYWxsZXRDb25maWcgPSB7XG4gICAgb3duZXI6IEFkZHJlc3M7XG4gICAgbWludGVyOiBBZGRyZXNzO1xuICAgIHdhbGxldENvZGU6IENlbGw7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gamV0dG9uV2FsbGV0Q29uZmlnVG9DZWxsKGNvbmZpZzogSmV0dG9uV2FsbGV0Q29uZmlnKTogQ2VsbCB7XG4gICAgcmV0dXJuIGJlZ2luQ2VsbCgpXG4gICAgICAgIC5zdG9yZUNvaW5zKDApXG4gICAgICAgIC5zdG9yZUFkZHJlc3MoY29uZmlnLm93bmVyKVxuICAgICAgICAuc3RvcmVBZGRyZXNzKGNvbmZpZy5taW50ZXIpXG4gICAgICAgIC5zdG9yZVJlZihjb25maWcud2FsbGV0Q29kZSlcbiAgICAgICAgLmVuZENlbGwoKTtcbn1cblxuZXhwb3J0IGNsYXNzIEpldHRvbldhbGxldCBpbXBsZW1lbnRzIENvbnRyYWN0IHtcbiAgICBjb25zdHJ1Y3RvcihyZWFkb25seSBhZGRyZXNzOiBBZGRyZXNzLCByZWFkb25seSBpbml0PzogeyBjb2RlOiBDZWxsOyBkYXRhOiBDZWxsIH0pIHt9XG5cbiAgICBzdGF0aWMgY3JlYXRlRnJvbUFkZHJlc3MoYWRkcmVzczogQWRkcmVzcykge1xuICAgICAgICByZXR1cm4gbmV3IEpldHRvbldhbGxldChhZGRyZXNzKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgY3JlYXRlRnJvbUNvbmZpZyhjb25maWc6IEpldHRvbldhbGxldENvbmZpZywgY29kZTogQ2VsbCwgd29ya2NoYWluID0gMCkge1xuICAgICAgICBjb25zdCBkYXRhID0gamV0dG9uV2FsbGV0Q29uZmlnVG9DZWxsKGNvbmZpZyk7XG4gICAgICAgIGNvbnN0IGluaXQgPSB7IGNvZGUsIGRhdGEgfTtcbiAgICAgICAgcmV0dXJuIG5ldyBKZXR0b25XYWxsZXQoY29udHJhY3RBZGRyZXNzKHdvcmtjaGFpbiwgaW5pdCksIGluaXQpO1xuICAgIH1cblxuICAgIGFzeW5jIHNlbmREZXBsb3kocHJvdmlkZXI6IENvbnRyYWN0UHJvdmlkZXIsIHZpYTogU2VuZGVyLCB2YWx1ZTogYmlnaW50KSB7XG4gICAgICAgIGF3YWl0IHByb3ZpZGVyLmludGVybmFsKHZpYSwge1xuICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICBzZW5kTW9kZTogU2VuZE1vZGUuUEFZX0dBU19TRVBBUkFURUxZLFxuICAgICAgICAgICAgYm9keTogYmVnaW5DZWxsKCkuZW5kQ2VsbCgpLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBhc3luYyBzZW5kVHJhbnNmZXIoXG4gICAgICAgIHByb3ZpZGVyOiBDb250cmFjdFByb3ZpZGVyLFxuICAgICAgICB2aWE6IFNlbmRlcixcbiAgICAgICAgdmFsdWU6IGJpZ2ludCxcbiAgICAgICAgZm9yd2FyZFZhbHVlOiBiaWdpbnQsXG4gICAgICAgIHJlY2lwaWVudDogQWRkcmVzcyxcbiAgICAgICAgYW1vdW50OiBiaWdpbnQsXG4gICAgICAgIGZvcndhcmRQYXlsb2FkOiBDZWxsXG4gICAgKSB7XG4gICAgICAgIGF3YWl0IHByb3ZpZGVyLmludGVybmFsKHZpYSwge1xuICAgICAgICAgICAgc2VuZE1vZGU6IFNlbmRNb2RlLlBBWV9HQVNfU0VQQVJBVEVMWSxcbiAgICAgICAgICAgIGJvZHk6IGJlZ2luQ2VsbCgpXG4gICAgICAgICAgICAgICAgLnN0b3JlVWludCgweDBmOGE3ZWE1LCAzMilcbiAgICAgICAgICAgICAgICAuc3RvcmVVaW50KDAsIDY0KVxuICAgICAgICAgICAgICAgIC5zdG9yZUNvaW5zKGFtb3VudClcbiAgICAgICAgICAgICAgICAuc3RvcmVBZGRyZXNzKHJlY2lwaWVudClcbiAgICAgICAgICAgICAgICAuc3RvcmVBZGRyZXNzKHZpYS5hZGRyZXNzKVxuICAgICAgICAgICAgICAgIC5zdG9yZVVpbnQoMCwgMSlcbiAgICAgICAgICAgICAgICAuc3RvcmVDb2lucyhmb3J3YXJkVmFsdWUpXG4gICAgICAgICAgICAgICAgLnN0b3JlVWludCgxLCAxKVxuICAgICAgICAgICAgICAgIC5zdG9yZVJlZihmb3J3YXJkUGF5bG9hZClcbiAgICAgICAgICAgICAgICAuZW5kQ2VsbCgpLFxuICAgICAgICAgICAgdmFsdWU6IHZhbHVlICsgZm9yd2FyZFZhbHVlLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBhc3luYyBnZXRKZXR0b25CYWxhbmNlKHByb3ZpZGVyOiBDb250cmFjdFByb3ZpZGVyKSB7XG4gICAgICAgIGxldCBzdGF0ZSA9IGF3YWl0IHByb3ZpZGVyLmdldFN0YXRlKCk7XG4gICAgICAgIGlmIChzdGF0ZS5zdGF0ZS50eXBlICE9PSAnYWN0aXZlJykge1xuICAgICAgICAgICAgcmV0dXJuIDBuO1xuICAgICAgICB9XG4gICAgICAgIGxldCByZXMgPSBhd2FpdCBwcm92aWRlci5nZXQoJ2dldF93YWxsZXRfZGF0YScsIFtdKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGFjay5yZWFkQmlnTnVtYmVyKCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImJlZ2luQ2VsbCIsImNvbnRyYWN0QWRkcmVzcyIsIlNlbmRNb2RlIiwiamV0dG9uV2FsbGV0Q29uZmlnVG9DZWxsIiwiY29uZmlnIiwic3RvcmVDb2lucyIsInN0b3JlQWRkcmVzcyIsIm93bmVyIiwibWludGVyIiwic3RvcmVSZWYiLCJ3YWxsZXRDb2RlIiwiZW5kQ2VsbCIsIkpldHRvbldhbGxldCIsImNyZWF0ZUZyb21BZGRyZXNzIiwiYWRkcmVzcyIsImNyZWF0ZUZyb21Db25maWciLCJjb2RlIiwid29ya2NoYWluIiwiZGF0YSIsImluaXQiLCJzZW5kRGVwbG95IiwicHJvdmlkZXIiLCJ2aWEiLCJ2YWx1ZSIsImludGVybmFsIiwic2VuZE1vZGUiLCJQQVlfR0FTX1NFUEFSQVRFTFkiLCJib2R5Iiwic2VuZFRyYW5zZmVyIiwiZm9yd2FyZFZhbHVlIiwicmVjaXBpZW50IiwiYW1vdW50IiwiZm9yd2FyZFBheWxvYWQiLCJzdG9yZVVpbnQiLCJnZXRKZXR0b25CYWxhbmNlIiwic3RhdGUiLCJnZXRTdGF0ZSIsInR5cGUiLCJyZXMiLCJnZXQiLCJzdGFjayIsInJlYWRCaWdOdW1iZXIiLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./wrappers/JettonWallet.ts\n"));

/***/ })

});