"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useMassTransfer.ts":
/*!**********************************!*\
  !*** ./hooks/useMassTransfer.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMassTransfer: function() { return /* binding */ useMassTransfer; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ton_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ton/core */ \"(app-pages-browser)/./node_modules/@ton/core/dist/index.js\");\n/* harmony import */ var _ton_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ton_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ton_ton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ton/ton */ \"(app-pages-browser)/./node_modules/@ton/ton/dist/index.js\");\n/* harmony import */ var _ton_ton__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ton_ton__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ton_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ton/crypto */ \"(app-pages-browser)/./node_modules/@ton/crypto/dist/index.js\");\n/* harmony import */ var _wrappers_JettonMinter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/wrappers/JettonMinter */ \"(app-pages-browser)/./wrappers/JettonMinter.ts\");\n/* harmony import */ var _wrappers_JettonWallet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/wrappers/JettonWallet */ \"(app-pages-browser)/./wrappers/JettonWallet.ts\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n\n\n\n\n\n\n\nconst client = new _ton_ton__WEBPACK_IMPORTED_MODULE_2__.TonClient({\n    endpoint: \"https://toncenter.com/api/v2/jsonRPC\"\n});\nfunction useMassTransfer() {\n    const [isSending, setIsSending] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        current: 0,\n        total: 0\n    });\n    const [walletAddress, setWalletAddress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    // üîë –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ—à–µ–ª—å–∫–∞ –∏–∑ –º–Ω–µ–º–æ–Ω–∏–∫–∏\n    const initWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (mnemonic)=>{\n        try {\n            const words = mnemonic.trim().split(\" \");\n            if (words.length !== 24) {\n                throw new Error(\"Mnemonic must contain exactly 24 words\");\n            }\n            const keyPair = await (0,_ton_crypto__WEBPACK_IMPORTED_MODULE_3__.mnemonicToWalletKey)(words);\n            const wallet = _ton_ton__WEBPACK_IMPORTED_MODULE_2__.WalletContractV4.create({\n                workchain: 0,\n                publicKey: keyPair.publicKey\n            });\n            const address = wallet.address.toString();\n            setWalletAddress(address);\n            console.log(\"\\uD83D\\uDD11 Wallet initialized:\", address);\n            return {\n                wallet,\n                keyPair,\n                address\n            };\n        } catch (error) {\n            console.error(\"‚ùå Wallet init error:\", error);\n            throw new Error(\"Invalid mnemonic phrase\");\n        }\n    }, []);\n    // üöÄ –ù–û–í–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –º–∞—Å—Å–æ–≤–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ —á–µ—Ä–µ–∑ –º–Ω–µ–º–æ–Ω–∏–∫—É\n    const sendToAllWithMnemonic = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (recipients, jettonMinterAddress, mnemonic)=>{\n        // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n        if (!recipients || recipients.length === 0) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"Recipients list is empty\");\n            return;\n        }\n        if (!mnemonic || mnemonic.trim().split(\" \").length !== 24) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"Please provide valid 24-word mnemonic\");\n            return;\n        }\n        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥—Ä–µ—Å–∞ –∏ —Å—É–º–º—ã\n        for(let i = 0; i < recipients.length; i++){\n            const r = recipients[i];\n            try {\n                _ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(r.address);\n            } catch (e) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"Invalid address at position \".concat(i + 1, \": \").concat(r.address));\n                return;\n            }\n            const amount = parseFloat(r.amount);\n            if (isNaN(amount) || amount <= 0) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"Invalid amount at position \".concat(i + 1, \": \").concat(r.amount));\n                return;\n            }\n        }\n        setIsSending(true);\n        setProgress({\n            current: 0,\n            total: recipients.length\n        });\n        try {\n            console.log(\"\\uD83D\\uDE80 Starting mass transfer to\", recipients.length, \"recipients\");\n            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ—à–µ–ª–µ–∫\n            const { wallet, keyPair, address } = await initWallet(mnemonic);\n            console.log(\"\\uD83D\\uDCBC Sender wallet:\", address);\n            // –ü–æ–ª—É—á–∞–µ–º jetton wallet –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è  \n            const jettonWalletAddress = await getJettonWalletAddress(address, jettonMinterAddress);\n            console.log(\"\\uD83E\\uDE99 Jetton wallet:\", jettonWalletAddress);\n            const jettonWallet = client.open(_wrappers_JettonWallet__WEBPACK_IMPORTED_MODULE_5__.JettonWallet.createFromAddress(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(jettonWalletAddress)));\n            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é\n            for(let i = 0; i < recipients.length; i++){\n                const recipient = recipients[i];\n                console.log(\"\\uD83D\\uDCE4 Sending \".concat(i + 1, \"/\").concat(recipients.length, \": \").concat(recipient.amount, \" tokens to \").concat(recipient.address));\n                try {\n                    // ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—É–º–º—É –≤ nanocoins (–¥–æ–±–∞–≤–ª—è–µ–º 9 –Ω—É–ª–µ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)\n                    const amountInNano = (0,_ton_core__WEBPACK_IMPORTED_MODULE_1__.toNano)(recipient.amount); // \"1.5\" ‚Üí 1500000000n\n                    // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ jetton —Ç–æ–∫–µ–Ω–æ–≤\n                    const transferMessage = (0,_ton_ton__WEBPACK_IMPORTED_MODULE_2__.internal)({\n                        to: jettonWalletAddress,\n                        value: (0,_ton_core__WEBPACK_IMPORTED_MODULE_1__.toNano)(\"0.08\"),\n                        body: (0,_ton_core__WEBPACK_IMPORTED_MODULE_1__.beginCell)().storeUint(0x0f8a7ea5, 32) // transfer op\n                        .storeUint(0, 64) // query_id\n                        .storeCoins(amountInNano) // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ nanocoins\n                        .storeAddress(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(recipient.address)) // –ø–æ–ª—É—á–∞—Ç–µ–ª—å\n                        .storeAddress(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(address)) // response_destination\n                        .storeUint(0, 1) // custom_payload null\n                        .storeCoins((0,_ton_core__WEBPACK_IMPORTED_MODULE_1__.toNano)(\"0.02\")) // forward_ton_amount\n                        .storeUint(0, 1) // forward_payload null\n                        .endCell()\n                    });\n                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é\n                    const seqno = await wallet.getSeqno(client.provider(wallet.address));\n                    await wallet.sendTransfer(client.provider(wallet.address), {\n                        seqno,\n                        secretKey: keyPair.secretKey,\n                        messages: [\n                            transferMessage\n                        ]\n                    });\n                    setProgress({\n                        current: i + 1,\n                        total: recipients.length\n                    });\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].success(\"‚úÖ Sent \".concat(recipient.amount, \" tokens to \").concat(recipient.address.slice(0, 6), \"...\"));\n                    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏\n                    if (i < recipients.length - 1) {\n                        console.log(\"‚è≥ Waiting 3 seconds before next transaction...\");\n                        await new Promise((resolve)=>setTimeout(resolve, 3000));\n                    }\n                } catch (error) {\n                    console.error(\"‚ùå Failed to send to \".concat(recipient.address, \":\"), error);\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"‚ùå Failed: \".concat(recipient.address.slice(0, 6), \"... (\").concat(error, \")\"));\n                    // –û–ø—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è\n                    const shouldContinue = confirm(\"Failed to send to \".concat(recipient.address.slice(0, 10), \"...\\n\") + \"Error: \".concat(error, \"\\n\\n\") + \"Continue with remaining recipients?\");\n                    if (!shouldContinue) {\n                        break;\n                    }\n                }\n            }\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].success(\"\\uD83C\\uDF89 Mass transfer completed! Sent to \".concat(progress.current, \" recipients\"));\n            console.log(\"‚úÖ Mass transfer completed successfully\");\n        } catch (error) {\n            console.error(\"‚ùå Mass transfer error:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(\"‚ùå Mass transfer failed: \".concat(error));\n            throw error;\n        } finally{\n            setIsSending(false);\n            setProgress({\n                current: 0,\n                total: 0\n            });\n        }\n    }, [\n        initWallet\n    ]);\n    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è jetton wallet –∞–¥—Ä–µ—Å–∞\n    const getJettonWalletAddress = async (userAddress, jettonMinterAddress)=>{\n        try {\n            const minter = client.open(_wrappers_JettonMinter__WEBPACK_IMPORTED_MODULE_4__.JettonMinter.createFromAddress(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(jettonMinterAddress)));\n            const walletAddress = await minter.getWalletAddressOf(_ton_core__WEBPACK_IMPORTED_MODULE_1__.Address.parse(userAddress));\n            return walletAddress.toString();\n        } catch (error) {\n            console.error(\"Error getting jetton wallet:\", error);\n            throw new Error(\"Failed to get jetton wallet address\");\n        }\n    };\n    return {\n        sendToAllWithMnemonic,\n        initWallet,\n        isSending,\n        progress,\n        walletAddress\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useMassTransfer.ts\n"));

/***/ })

});