/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jssha";
exports.ids = ["vendor-chunks/jssha"];
exports.modules = {

/***/ "(ssr)/./node_modules/jssha/dist/sha.js":
/*!****************************************!*\
  !*** ./node_modules/jssha/dist/sha.js ***!
  \****************************************/
/***/ (function(module) {

eval("/**\n * A JavaScript implementation of the SHA family of hashes - defined in FIPS PUB 180-4, FIPS PUB 202,\n * and SP 800-185 - as well as the corresponding HMAC implementation as defined in FIPS PUB 198-1.\n *\n * Copyright 2008-2020 Brian Turek, 1998-2009 Paul Johnston & Contributors\n * Distributed under the BSD License\n * See http://caligatio.github.com/jsSHA/ for more information\n *\n * Two ECMAScript polyfill functions carry the following license:\n *\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED,\n * INCLUDING WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n * MERCHANTABLITY OR NON-INFRINGEMENT.\n *\n * See the Apache Version 2.0 License for specific language governing permissions and limitations under the License.\n */ !function(n, r) {\n     true ? module.exports = r() : 0;\n}(this, function() {\n    \"use strict\";\n    var n = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    function r(n, r, t, e) {\n        var i, o, u, f = r || [\n            0\n        ], w = (t = t || 0) >>> 3, s = -1 === e ? 3 : 0;\n        for(i = 0; i < n.length; i += 1)o = (u = i + w) >>> 2, f.length <= o && f.push(0), f[o] |= n[i] << 8 * (s + e * (u % 4));\n        return {\n            value: f,\n            binLen: 8 * n.length + t\n        };\n    }\n    function t(t, e, i) {\n        switch(e){\n            case \"UTF8\":\n            case \"UTF16BE\":\n            case \"UTF16LE\":\n                break;\n            default:\n                throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n        }\n        switch(t){\n            case \"HEX\":\n                return function(n, r, t) {\n                    return function(n, r, t, e) {\n                        var i, o, u, f;\n                        if (0 != n.length % 2) throw new Error(\"String of HEX type must be in byte increments\");\n                        var w = r || [\n                            0\n                        ], s = (t = t || 0) >>> 3, a = -1 === e ? 3 : 0;\n                        for(i = 0; i < n.length; i += 2){\n                            if (o = parseInt(n.substr(i, 2), 16), isNaN(o)) throw new Error(\"String of HEX type contains invalid characters\");\n                            for(u = (f = (i >>> 1) + s) >>> 2; w.length <= u;)w.push(0);\n                            w[u] |= o << 8 * (a + e * (f % 4));\n                        }\n                        return {\n                            value: w,\n                            binLen: 4 * n.length + t\n                        };\n                    }(n, r, t, i);\n                };\n            case \"TEXT\":\n                return function(n, r, t) {\n                    return function(n, r, t, e, i) {\n                        var o, u, f, w, s, a, h, c, v = 0, A = t || [\n                            0\n                        ], E = (e = e || 0) >>> 3;\n                        if (\"UTF8\" === r) for(h = -1 === i ? 3 : 0, f = 0; f < n.length; f += 1)for(u = [], 128 > (o = n.charCodeAt(f)) ? u.push(o) : 2048 > o ? (u.push(192 | o >>> 6), u.push(128 | 63 & o)) : 55296 > o || 57344 <= o ? u.push(224 | o >>> 12, 128 | o >>> 6 & 63, 128 | 63 & o) : (f += 1, o = 65536 + ((1023 & o) << 10 | 1023 & n.charCodeAt(f)), u.push(240 | o >>> 18, 128 | o >>> 12 & 63, 128 | o >>> 6 & 63, 128 | 63 & o)), w = 0; w < u.length; w += 1){\n                            for(s = (a = v + E) >>> 2; A.length <= s;)A.push(0);\n                            A[s] |= u[w] << 8 * (h + i * (a % 4)), v += 1;\n                        }\n                        else for(h = -1 === i ? 2 : 0, c = \"UTF16LE\" === r && 1 !== i || \"UTF16LE\" !== r && 1 === i, f = 0; f < n.length; f += 1){\n                            for(o = n.charCodeAt(f), !0 === c && (o = (w = 255 & o) << 8 | o >>> 8), s = (a = v + E) >>> 2; A.length <= s;)A.push(0);\n                            A[s] |= o << 8 * (h + i * (a % 4)), v += 2;\n                        }\n                        return {\n                            value: A,\n                            binLen: 8 * v + e\n                        };\n                    }(n, e, r, t, i);\n                };\n            case \"B64\":\n                return function(r, t, e) {\n                    return function(r, t, e, i) {\n                        var o, u, f, w, s, a, h = 0, c = t || [\n                            0\n                        ], v = (e = e || 0) >>> 3, A = -1 === i ? 3 : 0, E = r.indexOf(\"=\");\n                        if (-1 === r.search(/^[a-zA-Z0-9=+/]+$/)) throw new Error(\"Invalid character in base-64 string\");\n                        if (r = r.replace(/=/g, \"\"), -1 !== E && E < r.length) throw new Error(\"Invalid '=' found in base-64 string\");\n                        for(o = 0; o < r.length; o += 4){\n                            for(w = r.substr(o, 4), f = 0, u = 0; u < w.length; u += 1)f |= n.indexOf(w.charAt(u)) << 18 - 6 * u;\n                            for(u = 0; u < w.length - 1; u += 1){\n                                for(s = (a = h + v) >>> 2; c.length <= s;)c.push(0);\n                                c[s] |= (f >>> 16 - 8 * u & 255) << 8 * (A + i * (a % 4)), h += 1;\n                            }\n                        }\n                        return {\n                            value: c,\n                            binLen: 8 * h + e\n                        };\n                    }(r, t, e, i);\n                };\n            case \"BYTES\":\n                return function(n, r, t) {\n                    return function(n, r, t, e) {\n                        var i, o, u, f, w = r || [\n                            0\n                        ], s = (t = t || 0) >>> 3, a = -1 === e ? 3 : 0;\n                        for(o = 0; o < n.length; o += 1)i = n.charCodeAt(o), u = (f = o + s) >>> 2, w.length <= u && w.push(0), w[u] |= i << 8 * (a + e * (f % 4));\n                        return {\n                            value: w,\n                            binLen: 8 * n.length + t\n                        };\n                    }(n, r, t, i);\n                };\n            case \"ARRAYBUFFER\":\n                try {\n                    new ArrayBuffer(0);\n                } catch (n) {\n                    throw new Error(\"ARRAYBUFFER not supported by this environment\");\n                }\n                return function(n, t, e) {\n                    return function(n, t, e, i) {\n                        return r(new Uint8Array(n), t, e, i);\n                    }(n, t, e, i);\n                };\n            case \"UINT8ARRAY\":\n                try {\n                    new Uint8Array(0);\n                } catch (n) {\n                    throw new Error(\"UINT8ARRAY not supported by this environment\");\n                }\n                return function(n, t, e) {\n                    return r(n, t, e, i);\n                };\n            default:\n                throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\");\n        }\n    }\n    function e(r, t, e, i) {\n        switch(r){\n            case \"HEX\":\n                return function(n) {\n                    return function(n, r, t, e) {\n                        var i, o, u = \"\", f = r / 8, w = -1 === t ? 3 : 0;\n                        for(i = 0; i < f; i += 1)o = n[i >>> 2] >>> 8 * (w + t * (i % 4)), u += \"0123456789abcdef\".charAt(o >>> 4 & 15) + \"0123456789abcdef\".charAt(15 & o);\n                        return e.outputUpper ? u.toUpperCase() : u;\n                    }(n, t, e, i);\n                };\n            case \"B64\":\n                return function(r) {\n                    return function(r, t, e, i) {\n                        var o, u, f, w, s, a = \"\", h = t / 8, c = -1 === e ? 3 : 0;\n                        for(o = 0; o < h; o += 3)for(w = o + 1 < h ? r[o + 1 >>> 2] : 0, s = o + 2 < h ? r[o + 2 >>> 2] : 0, f = (r[o >>> 2] >>> 8 * (c + e * (o % 4)) & 255) << 16 | (w >>> 8 * (c + e * ((o + 1) % 4)) & 255) << 8 | s >>> 8 * (c + e * ((o + 2) % 4)) & 255, u = 0; u < 4; u += 1)a += 8 * o + 6 * u <= t ? n.charAt(f >>> 6 * (3 - u) & 63) : i.b64Pad;\n                        return a;\n                    }(r, t, e, i);\n                };\n            case \"BYTES\":\n                return function(n) {\n                    return function(n, r, t) {\n                        var e, i, o = \"\", u = r / 8, f = -1 === t ? 3 : 0;\n                        for(e = 0; e < u; e += 1)i = n[e >>> 2] >>> 8 * (f + t * (e % 4)) & 255, o += String.fromCharCode(i);\n                        return o;\n                    }(n, t, e);\n                };\n            case \"ARRAYBUFFER\":\n                try {\n                    new ArrayBuffer(0);\n                } catch (n) {\n                    throw new Error(\"ARRAYBUFFER not supported by this environment\");\n                }\n                return function(n) {\n                    return function(n, r, t) {\n                        var e, i = r / 8, o = new ArrayBuffer(i), u = new Uint8Array(o), f = -1 === t ? 3 : 0;\n                        for(e = 0; e < i; e += 1)u[e] = n[e >>> 2] >>> 8 * (f + t * (e % 4)) & 255;\n                        return o;\n                    }(n, t, e);\n                };\n            case \"UINT8ARRAY\":\n                try {\n                    new Uint8Array(0);\n                } catch (n) {\n                    throw new Error(\"UINT8ARRAY not supported by this environment\");\n                }\n                return function(n) {\n                    return function(n, r, t) {\n                        var e, i = r / 8, o = -1 === t ? 3 : 0, u = new Uint8Array(i);\n                        for(e = 0; e < i; e += 1)u[e] = n[e >>> 2] >>> 8 * (o + t * (e % 4)) & 255;\n                        return u;\n                    }(n, t, e);\n                };\n            default:\n                throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\");\n        }\n    }\n    var i = [\n        1116352408,\n        1899447441,\n        3049323471,\n        3921009573,\n        961987163,\n        1508970993,\n        2453635748,\n        2870763221,\n        3624381080,\n        310598401,\n        607225278,\n        1426881987,\n        1925078388,\n        2162078206,\n        2614888103,\n        3248222580,\n        3835390401,\n        4022224774,\n        264347078,\n        604807628,\n        770255983,\n        1249150122,\n        1555081692,\n        1996064986,\n        2554220882,\n        2821834349,\n        2952996808,\n        3210313671,\n        3336571891,\n        3584528711,\n        113926993,\n        338241895,\n        666307205,\n        773529912,\n        1294757372,\n        1396182291,\n        1695183700,\n        1986661051,\n        2177026350,\n        2456956037,\n        2730485921,\n        2820302411,\n        3259730800,\n        3345764771,\n        3516065817,\n        3600352804,\n        4094571909,\n        275423344,\n        430227734,\n        506948616,\n        659060556,\n        883997877,\n        958139571,\n        1322822218,\n        1537002063,\n        1747873779,\n        1955562222,\n        2024104815,\n        2227730452,\n        2361852424,\n        2428436474,\n        2756734187,\n        3204031479,\n        3329325298\n    ], o = [\n        3238371032,\n        914150663,\n        812702999,\n        4144912697,\n        4290775857,\n        1750603025,\n        1694076839,\n        3204075428\n    ], u = [\n        1779033703,\n        3144134277,\n        1013904242,\n        2773480762,\n        1359893119,\n        2600822924,\n        528734635,\n        1541459225\n    ], f = \"Chosen SHA variant is not supported\";\n    function w(n, r) {\n        var t, e, i = n.binLen >>> 3, o = r.binLen >>> 3, u = i << 3, f = 4 - i << 3;\n        if (i % 4 != 0) {\n            for(t = 0; t < o; t += 4)e = i + t >>> 2, n.value[e] |= r.value[t >>> 2] << u, n.value.push(0), n.value[e + 1] |= r.value[t >>> 2] >>> f;\n            return (n.value.length << 2) - 4 >= o + i && n.value.pop(), {\n                value: n.value,\n                binLen: n.binLen + r.binLen\n            };\n        }\n        return {\n            value: n.value.concat(r.value),\n            binLen: n.binLen + r.binLen\n        };\n    }\n    function s(n) {\n        var r = {\n            outputUpper: !1,\n            b64Pad: \"=\",\n            outputLen: -1\n        }, t = n || {}, e = \"Output length must be a multiple of 8\";\n        if (r.outputUpper = t.outputUpper || !1, t.b64Pad && (r.b64Pad = t.b64Pad), t.outputLen) {\n            if (t.outputLen % 8 != 0) throw new Error(e);\n            r.outputLen = t.outputLen;\n        } else if (t.shakeLen) {\n            if (t.shakeLen % 8 != 0) throw new Error(e);\n            r.outputLen = t.shakeLen;\n        }\n        if (\"boolean\" != typeof r.outputUpper) throw new Error(\"Invalid outputUpper formatting option\");\n        if (\"string\" != typeof r.b64Pad) throw new Error(\"Invalid b64Pad formatting option\");\n        return r;\n    }\n    function a(n, r, e, i) {\n        var o = n + \" must include a value and format\";\n        if (!r) {\n            if (!i) throw new Error(o);\n            return i;\n        }\n        if (void 0 === r.value || !r.format) throw new Error(o);\n        return t(r.format, r.encoding || \"UTF8\", e)(r.value);\n    }\n    var h = function() {\n        function n(n, r, t) {\n            var e = t || {};\n            if (this.t = r, this.i = e.encoding || \"UTF8\", this.numRounds = e.numRounds || 1, isNaN(this.numRounds) || this.numRounds !== parseInt(this.numRounds, 10) || 1 > this.numRounds) throw new Error(\"numRounds must a integer >= 1\");\n            this.o = n, this.u = [], this.s = 0, this.h = !1, this.v = 0, this.A = !1, this.l = [], this.H = [];\n        }\n        return n.prototype.update = function(n) {\n            var r, t = 0, e = this.S >>> 5, i = this.p(n, this.u, this.s), o = i.binLen, u = i.value, f = o >>> 5;\n            for(r = 0; r < f; r += e)t + this.S <= o && (this.m = this.R(u.slice(r, r + e), this.m), t += this.S);\n            this.v += t, this.u = u.slice(t >>> 5), this.s = o % this.S, this.h = !0;\n        }, n.prototype.getHash = function(n, r) {\n            var t, i, o = this.U, u = s(r);\n            if (this.T) {\n                if (-1 === u.outputLen) throw new Error(\"Output length must be specified in options\");\n                o = u.outputLen;\n            }\n            var f = e(n, o, this.C, u);\n            if (this.A && this.F) return f(this.F(u));\n            for(i = this.K(this.u.slice(), this.s, this.v, this.B(this.m), o), t = 1; t < this.numRounds; t += 1)this.T && o % 32 != 0 && (i[i.length - 1] &= 16777215 >>> 24 - o % 32), i = this.K(i, o, 0, this.L(this.o), o);\n            return f(i);\n        }, n.prototype.setHMACKey = function(n, r, e) {\n            if (!this.g) throw new Error(\"Variant does not support HMAC\");\n            if (this.h) throw new Error(\"Cannot set MAC key after calling update\");\n            var i = t(r, (e || {}).encoding || \"UTF8\", this.C);\n            this.k(i(n));\n        }, n.prototype.k = function(n) {\n            var r, t = this.S >>> 3, e = t / 4 - 1;\n            if (1 !== this.numRounds) throw new Error(\"Cannot set numRounds with MAC\");\n            if (this.A) throw new Error(\"MAC key already set\");\n            for(t < n.binLen / 8 && (n.value = this.K(n.value, n.binLen, 0, this.L(this.o), this.U)); n.value.length <= e;)n.value.push(0);\n            for(r = 0; r <= e; r += 1)this.l[r] = 909522486 ^ n.value[r], this.H[r] = 1549556828 ^ n.value[r];\n            this.m = this.R(this.l, this.m), this.v = this.S, this.A = !0;\n        }, n.prototype.getHMAC = function(n, r) {\n            var t = s(r);\n            return e(n, this.U, this.C, t)(this.Y());\n        }, n.prototype.Y = function() {\n            var n;\n            if (!this.A) throw new Error(\"Cannot call getHMAC without first setting MAC key\");\n            var r = this.K(this.u.slice(), this.s, this.v, this.B(this.m), this.U);\n            return n = this.R(this.H, this.L(this.o)), n = this.K(r, this.U, this.S, n, this.U);\n        }, n;\n    }(), c = function(n, r) {\n        return (c = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(n, r) {\n            n.__proto__ = r;\n        } || function(n, r) {\n            for(var t in r)Object.prototype.hasOwnProperty.call(r, t) && (n[t] = r[t]);\n        })(n, r);\n    };\n    function v(n, r) {\n        function t() {\n            this.constructor = n;\n        }\n        c(n, r), n.prototype = null === r ? Object.create(r) : (t.prototype = r.prototype, new t);\n    }\n    function A(n, r) {\n        return n << r | n >>> 32 - r;\n    }\n    function E(n, r) {\n        return n >>> r | n << 32 - r;\n    }\n    function l(n, r) {\n        return n >>> r;\n    }\n    function b(n, r, t) {\n        return n ^ r ^ t;\n    }\n    function H(n, r, t) {\n        return n & r ^ ~n & t;\n    }\n    function d(n, r, t) {\n        return n & r ^ n & t ^ r & t;\n    }\n    function S(n) {\n        return E(n, 2) ^ E(n, 13) ^ E(n, 22);\n    }\n    function p(n, r) {\n        var t = (65535 & n) + (65535 & r);\n        return (65535 & (n >>> 16) + (r >>> 16) + (t >>> 16)) << 16 | 65535 & t;\n    }\n    function m(n, r, t, e) {\n        var i = (65535 & n) + (65535 & r) + (65535 & t) + (65535 & e);\n        return (65535 & (n >>> 16) + (r >>> 16) + (t >>> 16) + (e >>> 16) + (i >>> 16)) << 16 | 65535 & i;\n    }\n    function y(n, r, t, e, i) {\n        var o = (65535 & n) + (65535 & r) + (65535 & t) + (65535 & e) + (65535 & i);\n        return (65535 & (n >>> 16) + (r >>> 16) + (t >>> 16) + (e >>> 16) + (i >>> 16) + (o >>> 16)) << 16 | 65535 & o;\n    }\n    function R(n) {\n        return E(n, 7) ^ E(n, 18) ^ l(n, 3);\n    }\n    function U(n) {\n        return E(n, 6) ^ E(n, 11) ^ E(n, 25);\n    }\n    function T(n) {\n        return [\n            1732584193,\n            4023233417,\n            2562383102,\n            271733878,\n            3285377520\n        ];\n    }\n    function C(n, r) {\n        var t, e, i, o, u, f, w, s = [];\n        for(t = r[0], e = r[1], i = r[2], o = r[3], u = r[4], w = 0; w < 80; w += 1)s[w] = w < 16 ? n[w] : A(s[w - 3] ^ s[w - 8] ^ s[w - 14] ^ s[w - 16], 1), f = w < 20 ? y(A(t, 5), H(e, i, o), u, 1518500249, s[w]) : w < 40 ? y(A(t, 5), b(e, i, o), u, 1859775393, s[w]) : w < 60 ? y(A(t, 5), d(e, i, o), u, 2400959708, s[w]) : y(A(t, 5), b(e, i, o), u, 3395469782, s[w]), u = o, o = i, i = A(e, 30), e = t, t = f;\n        return r[0] = p(t, r[0]), r[1] = p(e, r[1]), r[2] = p(i, r[2]), r[3] = p(o, r[3]), r[4] = p(u, r[4]), r;\n    }\n    function F(n, r, t, e) {\n        for(var i, o = 15 + (r + 65 >>> 9 << 4), u = r + t; n.length <= o;)n.push(0);\n        for(n[r >>> 5] |= 128 << 24 - r % 32, n[o] = 4294967295 & u, n[o - 1] = u / 4294967296 | 0, i = 0; i < n.length; i += 16)e = C(n.slice(i, i + 16), e);\n        return e;\n    }\n    var K = function(n) {\n        function r(r, e, i) {\n            var o = this;\n            if (\"SHA-1\" !== r) throw new Error(f);\n            var u = i || {};\n            return (o = n.call(this, r, e, i) || this).g = !0, o.F = o.Y, o.C = -1, o.p = t(o.t, o.i, o.C), o.R = C, o.B = function(n) {\n                return n.slice();\n            }, o.L = T, o.K = F, o.m = [\n                1732584193,\n                4023233417,\n                2562383102,\n                271733878,\n                3285377520\n            ], o.S = 512, o.U = 160, o.T = !1, u.hmacKey && o.k(a(\"hmacKey\", u.hmacKey, o.C)), o;\n        }\n        return v(r, n), r;\n    }(h);\n    function B(n) {\n        return \"SHA-224\" == n ? o.slice() : u.slice();\n    }\n    function L(n, r) {\n        var t, e, o, u, f, w, s, a, h, c, v, A, b = [];\n        for(t = r[0], e = r[1], o = r[2], u = r[3], f = r[4], w = r[5], s = r[6], a = r[7], v = 0; v < 64; v += 1)b[v] = v < 16 ? n[v] : m(E(A = b[v - 2], 17) ^ E(A, 19) ^ l(A, 10), b[v - 7], R(b[v - 15]), b[v - 16]), h = y(a, U(f), H(f, w, s), i[v], b[v]), c = p(S(t), d(t, e, o)), a = s, s = w, w = f, f = p(u, h), u = o, o = e, e = t, t = p(h, c);\n        return r[0] = p(t, r[0]), r[1] = p(e, r[1]), r[2] = p(o, r[2]), r[3] = p(u, r[3]), r[4] = p(f, r[4]), r[5] = p(w, r[5]), r[6] = p(s, r[6]), r[7] = p(a, r[7]), r;\n    }\n    var g = function(n) {\n        function r(r, e, i) {\n            var o = this;\n            if (\"SHA-224\" !== r && \"SHA-256\" !== r) throw new Error(f);\n            var u = i || {};\n            return (o = n.call(this, r, e, i) || this).F = o.Y, o.g = !0, o.C = -1, o.p = t(o.t, o.i, o.C), o.R = L, o.B = function(n) {\n                return n.slice();\n            }, o.L = B, o.K = function(n, t, e, i) {\n                return function(n, r, t, e, i) {\n                    for(var o, u = 15 + (r + 65 >>> 9 << 4), f = r + t; n.length <= u;)n.push(0);\n                    for(n[r >>> 5] |= 128 << 24 - r % 32, n[u] = 4294967295 & f, n[u - 1] = f / 4294967296 | 0, o = 0; o < n.length; o += 16)e = L(n.slice(o, o + 16), e);\n                    return \"SHA-224\" === i ? [\n                        e[0],\n                        e[1],\n                        e[2],\n                        e[3],\n                        e[4],\n                        e[5],\n                        e[6]\n                    ] : e;\n                }(n, t, e, i, r);\n            }, o.m = B(r), o.S = 512, o.U = \"SHA-224\" === r ? 224 : 256, o.T = !1, u.hmacKey && o.k(a(\"hmacKey\", u.hmacKey, o.C)), o;\n        }\n        return v(r, n), r;\n    }(h), k = function(n, r) {\n        this.N = n, this.I = r;\n    };\n    function Y(n, r) {\n        var t;\n        return r > 32 ? (t = 64 - r, new k(n.I << r | n.N >>> t, n.N << r | n.I >>> t)) : 0 !== r ? (t = 32 - r, new k(n.N << r | n.I >>> t, n.I << r | n.N >>> t)) : n;\n    }\n    function N(n, r) {\n        var t;\n        return r < 32 ? (t = 32 - r, new k(n.N >>> r | n.I << t, n.I >>> r | n.N << t)) : (t = 64 - r, new k(n.I >>> r | n.N << t, n.N >>> r | n.I << t));\n    }\n    function I(n, r) {\n        return new k(n.N >>> r, n.I >>> r | n.N << 32 - r);\n    }\n    function M(n, r, t) {\n        return new k(n.N & r.N ^ ~n.N & t.N, n.I & r.I ^ ~n.I & t.I);\n    }\n    function X(n, r, t) {\n        return new k(n.N & r.N ^ n.N & t.N ^ r.N & t.N, n.I & r.I ^ n.I & t.I ^ r.I & t.I);\n    }\n    function z(n) {\n        var r = N(n, 28), t = N(n, 34), e = N(n, 39);\n        return new k(r.N ^ t.N ^ e.N, r.I ^ t.I ^ e.I);\n    }\n    function O(n, r) {\n        var t, e;\n        t = (65535 & n.I) + (65535 & r.I);\n        var i = (65535 & (e = (n.I >>> 16) + (r.I >>> 16) + (t >>> 16))) << 16 | 65535 & t;\n        return t = (65535 & n.N) + (65535 & r.N) + (e >>> 16), e = (n.N >>> 16) + (r.N >>> 16) + (t >>> 16), new k((65535 & e) << 16 | 65535 & t, i);\n    }\n    function j(n, r, t, e) {\n        var i, o;\n        i = (65535 & n.I) + (65535 & r.I) + (65535 & t.I) + (65535 & e.I);\n        var u = (65535 & (o = (n.I >>> 16) + (r.I >>> 16) + (t.I >>> 16) + (e.I >>> 16) + (i >>> 16))) << 16 | 65535 & i;\n        return i = (65535 & n.N) + (65535 & r.N) + (65535 & t.N) + (65535 & e.N) + (o >>> 16), o = (n.N >>> 16) + (r.N >>> 16) + (t.N >>> 16) + (e.N >>> 16) + (i >>> 16), new k((65535 & o) << 16 | 65535 & i, u);\n    }\n    function _(n, r, t, e, i) {\n        var o, u;\n        o = (65535 & n.I) + (65535 & r.I) + (65535 & t.I) + (65535 & e.I) + (65535 & i.I);\n        var f = (65535 & (u = (n.I >>> 16) + (r.I >>> 16) + (t.I >>> 16) + (e.I >>> 16) + (i.I >>> 16) + (o >>> 16))) << 16 | 65535 & o;\n        return o = (65535 & n.N) + (65535 & r.N) + (65535 & t.N) + (65535 & e.N) + (65535 & i.N) + (u >>> 16), u = (n.N >>> 16) + (r.N >>> 16) + (t.N >>> 16) + (e.N >>> 16) + (i.N >>> 16) + (o >>> 16), new k((65535 & u) << 16 | 65535 & o, f);\n    }\n    function P(n, r) {\n        return new k(n.N ^ r.N, n.I ^ r.I);\n    }\n    function x(n) {\n        var r = N(n, 1), t = N(n, 8), e = I(n, 7);\n        return new k(r.N ^ t.N ^ e.N, r.I ^ t.I ^ e.I);\n    }\n    function V(n) {\n        var r = N(n, 14), t = N(n, 18), e = N(n, 41);\n        return new k(r.N ^ t.N ^ e.N, r.I ^ t.I ^ e.I);\n    }\n    var Z = [\n        new k(i[0], 3609767458),\n        new k(i[1], 602891725),\n        new k(i[2], 3964484399),\n        new k(i[3], 2173295548),\n        new k(i[4], 4081628472),\n        new k(i[5], 3053834265),\n        new k(i[6], 2937671579),\n        new k(i[7], 3664609560),\n        new k(i[8], 2734883394),\n        new k(i[9], 1164996542),\n        new k(i[10], 1323610764),\n        new k(i[11], 3590304994),\n        new k(i[12], 4068182383),\n        new k(i[13], 991336113),\n        new k(i[14], 633803317),\n        new k(i[15], 3479774868),\n        new k(i[16], 2666613458),\n        new k(i[17], 944711139),\n        new k(i[18], 2341262773),\n        new k(i[19], 2007800933),\n        new k(i[20], 1495990901),\n        new k(i[21], 1856431235),\n        new k(i[22], 3175218132),\n        new k(i[23], 2198950837),\n        new k(i[24], 3999719339),\n        new k(i[25], 766784016),\n        new k(i[26], 2566594879),\n        new k(i[27], 3203337956),\n        new k(i[28], 1034457026),\n        new k(i[29], 2466948901),\n        new k(i[30], 3758326383),\n        new k(i[31], 168717936),\n        new k(i[32], 1188179964),\n        new k(i[33], 1546045734),\n        new k(i[34], 1522805485),\n        new k(i[35], 2643833823),\n        new k(i[36], 2343527390),\n        new k(i[37], 1014477480),\n        new k(i[38], 1206759142),\n        new k(i[39], 344077627),\n        new k(i[40], 1290863460),\n        new k(i[41], 3158454273),\n        new k(i[42], 3505952657),\n        new k(i[43], 106217008),\n        new k(i[44], 3606008344),\n        new k(i[45], 1432725776),\n        new k(i[46], 1467031594),\n        new k(i[47], 851169720),\n        new k(i[48], 3100823752),\n        new k(i[49], 1363258195),\n        new k(i[50], 3750685593),\n        new k(i[51], 3785050280),\n        new k(i[52], 3318307427),\n        new k(i[53], 3812723403),\n        new k(i[54], 2003034995),\n        new k(i[55], 3602036899),\n        new k(i[56], 1575990012),\n        new k(i[57], 1125592928),\n        new k(i[58], 2716904306),\n        new k(i[59], 442776044),\n        new k(i[60], 593698344),\n        new k(i[61], 3733110249),\n        new k(i[62], 2999351573),\n        new k(i[63], 3815920427),\n        new k(3391569614, 3928383900),\n        new k(3515267271, 566280711),\n        new k(3940187606, 3454069534),\n        new k(4118630271, 4000239992),\n        new k(116418474, 1914138554),\n        new k(174292421, 2731055270),\n        new k(289380356, 3203993006),\n        new k(460393269, 320620315),\n        new k(685471733, 587496836),\n        new k(852142971, 1086792851),\n        new k(1017036298, 365543100),\n        new k(1126000580, 2618297676),\n        new k(1288033470, 3409855158),\n        new k(1501505948, 4234509866),\n        new k(1607167915, 987167468),\n        new k(1816402316, 1246189591)\n    ];\n    function q(n) {\n        return \"SHA-384\" === n ? [\n            new k(3418070365, o[0]),\n            new k(1654270250, o[1]),\n            new k(2438529370, o[2]),\n            new k(355462360, o[3]),\n            new k(1731405415, o[4]),\n            new k(41048885895, o[5]),\n            new k(3675008525, o[6]),\n            new k(1203062813, o[7])\n        ] : [\n            new k(u[0], 4089235720),\n            new k(u[1], 2227873595),\n            new k(u[2], 4271175723),\n            new k(u[3], 1595750129),\n            new k(u[4], 2917565137),\n            new k(u[5], 725511199),\n            new k(u[6], 4215389547),\n            new k(u[7], 327033209)\n        ];\n    }\n    function D(n, r) {\n        var t, e, i, o, u, f, w, s, a, h, c, v, A, E, l, b, H = [];\n        for(t = r[0], e = r[1], i = r[2], o = r[3], u = r[4], f = r[5], w = r[6], s = r[7], c = 0; c < 80; c += 1)c < 16 ? (v = 2 * c, H[c] = new k(n[v], n[v + 1])) : H[c] = j((A = H[c - 2], E = void 0, l = void 0, b = void 0, E = N(A, 19), l = N(A, 61), b = I(A, 6), new k(E.N ^ l.N ^ b.N, E.I ^ l.I ^ b.I)), H[c - 7], x(H[c - 15]), H[c - 16]), a = _(s, V(u), M(u, f, w), Z[c], H[c]), h = O(z(t), X(t, e, i)), s = w, w = f, f = u, u = O(o, a), o = i, i = e, e = t, t = O(a, h);\n        return r[0] = O(t, r[0]), r[1] = O(e, r[1]), r[2] = O(i, r[2]), r[3] = O(o, r[3]), r[4] = O(u, r[4]), r[5] = O(f, r[5]), r[6] = O(w, r[6]), r[7] = O(s, r[7]), r;\n    }\n    var G = function(n) {\n        function r(r, e, i) {\n            var o = this;\n            if (\"SHA-384\" !== r && \"SHA-512\" !== r) throw new Error(f);\n            var u = i || {};\n            return (o = n.call(this, r, e, i) || this).F = o.Y, o.g = !0, o.C = -1, o.p = t(o.t, o.i, o.C), o.R = D, o.B = function(n) {\n                return n.slice();\n            }, o.L = q, o.K = function(n, t, e, i) {\n                return function(n, r, t, e, i) {\n                    for(var o, u = 31 + (r + 129 >>> 10 << 5), f = r + t; n.length <= u;)n.push(0);\n                    for(n[r >>> 5] |= 128 << 24 - r % 32, n[u] = 4294967295 & f, n[u - 1] = f / 4294967296 | 0, o = 0; o < n.length; o += 32)e = D(n.slice(o, o + 32), e);\n                    return \"SHA-384\" === i ? [\n                        (e = e)[0].N,\n                        e[0].I,\n                        e[1].N,\n                        e[1].I,\n                        e[2].N,\n                        e[2].I,\n                        e[3].N,\n                        e[3].I,\n                        e[4].N,\n                        e[4].I,\n                        e[5].N,\n                        e[5].I\n                    ] : [\n                        e[0].N,\n                        e[0].I,\n                        e[1].N,\n                        e[1].I,\n                        e[2].N,\n                        e[2].I,\n                        e[3].N,\n                        e[3].I,\n                        e[4].N,\n                        e[4].I,\n                        e[5].N,\n                        e[5].I,\n                        e[6].N,\n                        e[6].I,\n                        e[7].N,\n                        e[7].I\n                    ];\n                }(n, t, e, i, r);\n            }, o.m = q(r), o.S = 1024, o.U = \"SHA-384\" === r ? 384 : 512, o.T = !1, u.hmacKey && o.k(a(\"hmacKey\", u.hmacKey, o.C)), o;\n        }\n        return v(r, n), r;\n    }(h), J = [\n        new k(0, 1),\n        new k(0, 32898),\n        new k(2147483648, 32906),\n        new k(2147483648, 2147516416),\n        new k(0, 32907),\n        new k(0, 2147483649),\n        new k(2147483648, 2147516545),\n        new k(2147483648, 32777),\n        new k(0, 138),\n        new k(0, 136),\n        new k(0, 2147516425),\n        new k(0, 2147483658),\n        new k(0, 2147516555),\n        new k(2147483648, 139),\n        new k(2147483648, 32905),\n        new k(2147483648, 32771),\n        new k(2147483648, 32770),\n        new k(2147483648, 128),\n        new k(0, 32778),\n        new k(2147483648, 2147483658),\n        new k(2147483648, 2147516545),\n        new k(2147483648, 32896),\n        new k(0, 2147483649),\n        new k(2147483648, 2147516424)\n    ], Q = [\n        [\n            0,\n            36,\n            3,\n            41,\n            18\n        ],\n        [\n            1,\n            44,\n            10,\n            45,\n            2\n        ],\n        [\n            62,\n            6,\n            43,\n            15,\n            61\n        ],\n        [\n            28,\n            55,\n            25,\n            21,\n            56\n        ],\n        [\n            27,\n            20,\n            39,\n            8,\n            14\n        ]\n    ];\n    function W(n) {\n        var r, t = [];\n        for(r = 0; r < 5; r += 1)t[r] = [\n            new k(0, 0),\n            new k(0, 0),\n            new k(0, 0),\n            new k(0, 0),\n            new k(0, 0)\n        ];\n        return t;\n    }\n    function $(n) {\n        var r, t = [];\n        for(r = 0; r < 5; r += 1)t[r] = n[r].slice();\n        return t;\n    }\n    function nn(n, r) {\n        var t, e, i, o, u, f, w, s, a, h = [], c = [];\n        if (null !== n) for(e = 0; e < n.length; e += 2)r[(e >>> 1) % 5][(e >>> 1) / 5 | 0] = P(r[(e >>> 1) % 5][(e >>> 1) / 5 | 0], new k(n[e + 1], n[e]));\n        for(t = 0; t < 24; t += 1){\n            for(o = W(), e = 0; e < 5; e += 1)h[e] = (u = r[e][0], f = r[e][1], w = r[e][2], s = r[e][3], a = r[e][4], new k(u.N ^ f.N ^ w.N ^ s.N ^ a.N, u.I ^ f.I ^ w.I ^ s.I ^ a.I));\n            for(e = 0; e < 5; e += 1)c[e] = P(h[(e + 4) % 5], Y(h[(e + 1) % 5], 1));\n            for(e = 0; e < 5; e += 1)for(i = 0; i < 5; i += 1)r[e][i] = P(r[e][i], c[e]);\n            for(e = 0; e < 5; e += 1)for(i = 0; i < 5; i += 1)o[i][(2 * e + 3 * i) % 5] = Y(r[e][i], Q[e][i]);\n            for(e = 0; e < 5; e += 1)for(i = 0; i < 5; i += 1)r[e][i] = P(o[e][i], new k(~o[(e + 1) % 5][i].N & o[(e + 2) % 5][i].N, ~o[(e + 1) % 5][i].I & o[(e + 2) % 5][i].I));\n            r[0][0] = P(r[0][0], J[t]);\n        }\n        return r;\n    }\n    function rn(n) {\n        var r, t, e = 0, i = [\n            0,\n            0\n        ], o = [\n            4294967295 & n,\n            n / 4294967296 & 2097151\n        ];\n        for(r = 6; r >= 0; r--)0 === (t = o[r >> 2] >>> 8 * r & 255) && 0 === e || (i[e + 1 >> 2] |= t << 8 * (e + 1), e += 1);\n        return e = 0 !== e ? e : 1, i[0] |= e, {\n            value: e + 1 > 4 ? i : [\n                i[0]\n            ],\n            binLen: 8 + 8 * e\n        };\n    }\n    function tn(n) {\n        return w(rn(n.binLen), n);\n    }\n    function en(n, r) {\n        var t, e = rn(r), i = r >>> 2, o = (i - (e = w(e, n)).value.length % i) % i;\n        for(t = 0; t < o; t++)e.value.push(0);\n        return e.value;\n    }\n    var on = function(n) {\n        function r(r, e, i) {\n            var o = this, u = 6, w = 0, s = i || {};\n            if (1 !== (o = n.call(this, r, e, i) || this).numRounds) {\n                if (s.kmacKey || s.hmacKey) throw new Error(\"Cannot set numRounds with MAC\");\n                if (\"CSHAKE128\" === o.o || \"CSHAKE256\" === o.o) throw new Error(\"Cannot set numRounds for CSHAKE variants\");\n            }\n            switch(o.C = 1, o.p = t(o.t, o.i, o.C), o.R = nn, o.B = $, o.L = W, o.m = W(), o.T = !1, r){\n                case \"SHA3-224\":\n                    o.S = w = 1152, o.U = 224, o.g = !0, o.F = o.Y;\n                    break;\n                case \"SHA3-256\":\n                    o.S = w = 1088, o.U = 256, o.g = !0, o.F = o.Y;\n                    break;\n                case \"SHA3-384\":\n                    o.S = w = 832, o.U = 384, o.g = !0, o.F = o.Y;\n                    break;\n                case \"SHA3-512\":\n                    o.S = w = 576, o.U = 512, o.g = !0, o.F = o.Y;\n                    break;\n                case \"SHAKE128\":\n                    u = 31, o.S = w = 1344, o.U = -1, o.T = !0, o.g = !1, o.F = null;\n                    break;\n                case \"SHAKE256\":\n                    u = 31, o.S = w = 1088, o.U = -1, o.T = !0, o.g = !1, o.F = null;\n                    break;\n                case \"KMAC128\":\n                    u = 4, o.S = w = 1344, o.M(i), o.U = -1, o.T = !0, o.g = !1, o.F = o.X;\n                    break;\n                case \"KMAC256\":\n                    u = 4, o.S = w = 1088, o.M(i), o.U = -1, o.T = !0, o.g = !1, o.F = o.X;\n                    break;\n                case \"CSHAKE128\":\n                    o.S = w = 1344, u = o.O(i), o.U = -1, o.T = !0, o.g = !1, o.F = null;\n                    break;\n                case \"CSHAKE256\":\n                    o.S = w = 1088, u = o.O(i), o.U = -1, o.T = !0, o.g = !1, o.F = null;\n                    break;\n                default:\n                    throw new Error(f);\n            }\n            return o.K = function(n, r, t, e, i) {\n                return function(n, r, t, e, i, o, u) {\n                    var f, w, s = 0, a = [], h = i >>> 5, c = r >>> 5;\n                    for(f = 0; f < c && r >= i; f += h)e = nn(n.slice(f, f + h), e), r -= i;\n                    for(n = n.slice(f), r %= i; n.length < h;)n.push(0);\n                    for(n[(f = r >>> 3) >> 2] ^= o << f % 4 * 8, n[h - 1] ^= 2147483648, e = nn(n, e); 32 * a.length < u && (w = e[s % 5][s / 5 | 0], a.push(w.I), !(32 * a.length >= u));)a.push(w.N), 0 == 64 * (s += 1) % i && (nn(null, e), s = 0);\n                    return a;\n                }(n, r, 0, e, w, u, i);\n            }, s.hmacKey && o.k(a(\"hmacKey\", s.hmacKey, o.C)), o;\n        }\n        return v(r, n), r.prototype.O = function(n, r) {\n            var t = function(n) {\n                var r = n || {};\n                return {\n                    funcName: a(\"funcName\", r.funcName, 1, {\n                        value: [],\n                        binLen: 0\n                    }),\n                    customization: a(\"Customization\", r.customization, 1, {\n                        value: [],\n                        binLen: 0\n                    })\n                };\n            }(n || {});\n            r && (t.funcName = r);\n            var e = w(tn(t.funcName), tn(t.customization));\n            if (0 !== t.customization.binLen || 0 !== t.funcName.binLen) {\n                for(var i = en(e, this.S >>> 3), o = 0; o < i.length; o += this.S >>> 5)this.m = this.R(i.slice(o, o + (this.S >>> 5)), this.m), this.v += this.S;\n                return 4;\n            }\n            return 31;\n        }, r.prototype.M = function(n) {\n            var r = function(n) {\n                var r = n || {};\n                return {\n                    kmacKey: a(\"kmacKey\", r.kmacKey, 1),\n                    funcName: {\n                        value: [\n                            1128353099\n                        ],\n                        binLen: 32\n                    },\n                    customization: a(\"Customization\", r.customization, 1, {\n                        value: [],\n                        binLen: 0\n                    })\n                };\n            }(n || {});\n            this.O(n, r.funcName);\n            for(var t = en(tn(r.kmacKey), this.S >>> 3), e = 0; e < t.length; e += this.S >>> 5)this.m = this.R(t.slice(e, e + (this.S >>> 5)), this.m), this.v += this.S;\n            this.A = !0;\n        }, r.prototype.X = function(n) {\n            var r = w({\n                value: this.u.slice(),\n                binLen: this.s\n            }, function(n) {\n                var r, t, e = 0, i = [\n                    0,\n                    0\n                ], o = [\n                    4294967295 & n,\n                    n / 4294967296 & 2097151\n                ];\n                for(r = 6; r >= 0; r--)0 == (t = o[r >> 2] >>> 8 * r & 255) && 0 === e || (i[e >> 2] |= t << 8 * e, e += 1);\n                return i[(e = 0 !== e ? e : 1) >> 2] |= e << 8 * e, {\n                    value: e + 1 > 4 ? i : [\n                        i[0]\n                    ],\n                    binLen: 8 + 8 * e\n                };\n            }(n.outputLen));\n            return this.K(r.value, r.binLen, this.v, this.B(this.m), n.outputLen);\n        }, r;\n    }(h);\n    return function() {\n        function n(n, r, t) {\n            if (\"SHA-1\" == n) this.j = new K(n, r, t);\n            else if (\"SHA-224\" == n || \"SHA-256\" == n) this.j = new g(n, r, t);\n            else if (\"SHA-384\" == n || \"SHA-512\" == n) this.j = new G(n, r, t);\n            else {\n                if (\"SHA3-224\" != n && \"SHA3-256\" != n && \"SHA3-384\" != n && \"SHA3-512\" != n && \"SHAKE128\" != n && \"SHAKE256\" != n && \"CSHAKE128\" != n && \"CSHAKE256\" != n && \"KMAC128\" != n && \"KMAC256\" != n) throw new Error(f);\n                this.j = new on(n, r, t);\n            }\n        }\n        return n.prototype.update = function(n) {\n            this.j.update(n);\n        }, n.prototype.getHash = function(n, r) {\n            return this.j.getHash(n, r);\n        }, n.prototype.setHMACKey = function(n, r, t) {\n            this.j.setHMACKey(n, r, t);\n        }, n.prototype.getHMAC = function(n, r) {\n            return this.j.getHMAC(n, r);\n        }, n;\n    }();\n}); //# sourceMappingURL=sha.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jssha/dist/sha.js\n");

/***/ })

};
;